version: '3.4'

services:
  curl:
    image: curlimages/curl:8.3.0
    user: ${DOCKER_USER:-1000}
    restart: always
    volumes:
      - ./data/moodle/html:/var/www/html
    command:
      - /bin/sh
      - -c
      - "trap : TERM INT; while :; do curl http://moodle/admin/cron.php; sleep 60; done & wait"

  dockerize:
    image: jwilder/dockerize:0.6.1

  elasticsearch:
    image: elasticsearch:8.10.1
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - ${HOOK_RALPH_ELASTICSEARCH_PORT:-9200}:9200
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1

  hook:
    build:
      context: .
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    environment:
      PYLINTHOME: /app/.pylint.d
      HOOK_MOODLE_URL: ${HOOK_MOODLE_URL:-http://moodle}
      HOOK_MOODLE_WEBSERVICE_TOKEN: ${HOOK_MOODLE_WEBSERVICE_TOKEN:-32323232323232323232323232323232}
      HOOK_KAFKA_TOPIC: ${HOOK_KAFKA_TOPIC:-statements}
      HOOK_KAFKA_BOOTSTRAP_SERVERS: ${HOOK_KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      HOOK_SPARK_MASTER_URL: ${HOOK_SPARK_MASTER_URL:-spark://spark-master:7077}
    ports:
      - ${HOOK_API_PORT:-8000}:8000
    volumes:
      - .:/app
    command: [
      "uvicorn",
      "hook.main:app",
      "--host",
      "0.0.0.0",
      "--port",
      "8000",
      "--reload"
    ]
    depends_on:
      - moodle
      - spark-master
      - spark-worker
      - kafka

  kafka:
    image: docker.io/bitnami/kafka:3.6
    volumes:
      - "kafkadata:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  spark-master:
    image: bitnami/spark:3.5.0-debian-11-r16
    ports:
     - ${HOOK_SPARK_MASTER_WEB_UI_PORT:-8090}:8080
    environment:
      SPARK_MODE: master

  spark-worker:
    image: bitnami/spark:3.5.0-debian-11-r16
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 1G
      SPARK_WORKER_CORES: 1
    depends_on:
      - spark-master
    deploy:
      mode: replicated
      replicas: ${HOOK_SPARK_WORKERS:-1}

  swarmoodle:
    build:
      context: ./swarmoodle
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    ports:
     - "8089:8089"
    volumes:
      - ./swarmoodle:/app
    environment:
      LOCUST_HOST: http://moodle
      LOCUST_USERS: ${HOOK_SWARMOODLE_MOODLE_STUDENTS:-1}
      LOCUST_SPAWN_RATE: ${HOOK_SWARMOODLE_LOCUST_SPAWN_RATE:-50}
      SWARMOODLE_HOOK_URL: http://hook:8000
      SWARMOODLE_MOODLE_DELETE_USERS_AFTER_RUN: ${HOOK_SWARMOODLE_MOODLE_DELETE_USERS_AFTER_RUN:-0}
      SWARMOODLE_MOODLE_COURSE_ID: ${HOOK_SWARMOODLE_MOODLE_COURSE_ID:-2}
      SWARMOODLE_MOODLE_WEBSERVICE_TOKEN: ${HOOK_MOODLE_WEBSERVICE_TOKEN:-32323232323232323232323232323232}
      SWARMOODLE_OULAD_CODE_MODULE: ${HOOK_SWARMOODLE_OULAD_CODE_MODULE:-AAA}
      SWARMOODLE_OULAD_CODE_PRESENTATION: ${HOOK_SWARMOODLE_OULAD_CODE_PRESENTATION:-2013J}
      SWARMOODLE_OULAD_DEFAULT_PATH: /app/data/OULAD
      SWARMOODLE_REQUEST_MILLISECONDS_DURATION: ${HOOK_SWARMOODLE_REQUEST_MILLISECONDS_DURATION:-400}
      SWARMOODLE_SIMULATE_FIXED_DAY_DURATION: ${HOOK_SWARMOODLE_SIMULATE_FIXED_DAY_DURATION:-0}
    depends_on:
      - hook
      - redis

  mailpit:
    image: axllent/mailpit:v1.8.4
    restart: unless-stopped
    ports:
      - ${HOOK_MAILPIT_UI_PORT:-8025}:8025

  moodle:
    build:
      context: ./config/moodle
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    environment:
      MOODLE_APACHE_PORT: ${HOOK_MOODLE_APACHE_PORT:-8080}
      MOODLE_DATABASE_NAME: ${HOOK_MOODLE_MYSQL_DATABASE:-moodle}
      MOODLE_DATABASE_PASSWORD: ${HOOK_MOODLE_MYSQL_PASSWORD:-password}
      MOODLE_DATABASE_USER: ${HOOK_MOODLE_MYSQL_USER:-moodle}
      HOOK_RALPH_URL: ${HOOK_RALPH_URL:-http://ralph}
      HOOK_RALPH_LRS_AUTH_USER_NAME: ${HOOK_RALPH_LRS_AUTH_USER_NAME:-ralph}
      HOOK_RALPH_LRS_AUTH_USER_PASSWORD: ${HOOK_RALPH_LRS_AUTH_USER_PASSWORD:-password}
      PHP_INI-max_input_vars: 90000
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    ports:
      - ${HOOK_MOODLE_APACHE_PORT:-8080}:80
    volumes:
      - ./data/moodle/html:/var/www/html
      - ./data/moodle/moodledata:/var/www/moodledata
    depends_on:
      - mailpit
      - mysql
      - curl
      - ralph

  mysql:
    image: mysql:5.7.43
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      MYSQL_DATABASE: ${HOOK_MOODLE_MYSQL_DATABASE:-moodle}
      MYSQL_PASSWORD: ${HOOK_MOODLE_MYSQL_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${HOOK_MOODLE_MYSQL_ROOT_PASSWORD:-password}
      MYSQL_USER: ${HOOK_MOODLE_MYSQL_USER:-moodle}
    volumes:
      - mysqldata:/var/lib/mysql
    command: >
        --character-set-server=utf8mb4
        --collation-server=utf8mb4_bin
        --innodb_file_format=barracuda
        --innodb_file_per_table=On
        --innodb_large_prefix=On

  ralph:
    image: fundocker/ralph:3.9.0
    user: ${DOCKER_USER:-1000}
    environment:
      RALPH_AUTH_FILE: /app/auth.json
      RALPH_BACKENDS__DATABASE__ES__HOSTS: http://elasticsearch:9200
      RALPH_BACKENDS__DATABASE__ES__INDEX: ${HOOK_RALPH_ELASTICSEARCH_INDEX:-statements}
      RALPH_RUNSERVER_PORT: 80
      RALPH_XAPI_FORWARDINGS: >
        [
          {
            "is_active": true,
            "url": "http://hook:8000/forward",
            "basic_username": "admin@example.com",
            "basic_password": "PASSWORD",
            "max_retries": 1,
            "timeout": 5
          }
        ]
    command:
      - ralph
      - "-v"
      - DEBUG
      - runserver
      - "-b"
      - "es"
    volumes:
      - ./data/ralph:/app
    depends_on:
      - elasticsearch
  
  redis:
    image: redis:7.2.2
    restart: always
    volumes: 
      - redisdata:/data

volumes:
  elasticsearchdata:
    driver: local

  mysqldata:
    driver: local

  redisdata:
    driver: local

  kafkadata:
    driver: local
